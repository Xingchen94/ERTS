/*README

Flows of the programs:

Drone side:

=================================================================================
| BEFORE MISSION START:															|
| This mode is waiting for the first											|
| data send by the joystick from PC terminal									|
=================================================================================
				  					 ||
				  					 ||	
									 \/
=============================================================================================================================
| ON MISSION: This is loop process untill user decide to escape the mission by pressing fire button on MODE_SAFE or ESCAPE  |																										|
| 																															|
| 1. Capture the bytes received from PC terminal, and process the data (change control parameter, flags, etc)				|																		|
| 2. Check the communication based on the timer, whether it receives new data before the deadline or not, if so:			|
|    --> Go to the panic mode.																								|
| 	 Otherwise:																												|						
|	 --> Continue the programs.																								|
|																															|
| In timer interrupt loop:																									|
| 3. For every 1 second:																									|
|    Battery check, if the battery is low in 4 consecutive reading: --> go to panic mode.									| 
|    Otherwise: --> Continue mission  																						|
| 4. For every 50 ms:																										|
|    Send the telemetry data periodically every 50 ms.																		|
| 																															|
| In sensor interrupt loop (in DMP mode 100 Hz, in RAW mode 256 Hz)															|																												| 5. Read DMP / RAW sensor data (depends on RAW flag is triggered or not).													|
| 6. Performs filtering for RAW data (kalman, averaging filter or butterworth)												|
| 7. Switch from DMP to RAW, vice versa based on the flag (triggered by keyboard command which is sent by PC terminal)		|
| 8. Write to flash memory if the log flag is triggered (using keyboard key 'm')											|
=============================================================================================================================
									||
									||
									\/
=================================================================================
| END MISSION:																	|
| 9. If the log is written to the flash memory:									|
|    --> Send the log message to PC terminal   									|
|	 Otherwise:                                                                 |
|	 --> Exit the program														|
| data send by the joystick from PC terminal									|
=================================================================================					



PC terminal side: